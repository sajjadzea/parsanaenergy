name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: npm }
      - name: Install deps
        run: npm ci --ignore-engines
      - name: Run Playwright tests
        run: |
          npx playwright install --with-deps
          npx playwright test
  build_site:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Build decision-tree widget
        working-directory: decision-tree-app
        run: |
          npm ci --legacy-peer-deps
          npm run build
      - name: Build site
        working-directory: docs
        run: |
          npm ci --ignore-engines
          npm run build
      - name: Copy widget to dist
        run: |
          mkdir -p docs/dist/widget
          cp -r decision-tree-app/dist/* docs/dist/widget/
      - name: Prepare static folder
        run: |
          cd docs/dist
          touch .nojekyll
          if [ -f ../../docs/CNAME ]; then cp ../../docs/CNAME ./CNAME; fi
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3 # v3 bundles upload-artifact@v4
        with:
          path: ./docs/dist
          name: github-pages
  deploy:
    needs: build_site
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages

