name: Pages Build & Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'docs/**'
      - '.github/workflows/**'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: |
            pnpm-lock.yaml
            docs/pnpm-lock.yaml
            decision-tree-app/pnpm-lock.yaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install (workspace)
        run: |
          pnpm -v
          pnpm -w install --no-frozen-lockfile
          pnpm -C docs install --no-frozen-lockfile || true
          pnpm -C decision-tree-app install --no-frozen-lockfile || true

      # مهم: base را بر اساس خروجی configure-pages تنظیم می‌کنیم
      - name: Configure Pages (get base_path)
        id: pages
        uses: actions/configure-pages@v5

      - name: Build docs (Vite)
        run: |
          # اگر vite.config.js از base پشتیبانی می‌گیرد، این سوییچ کار می‌کند
          pnpm -C docs run build -- --base="${{ steps.pages.outputs.base_path }}/"

      # CNAME فقط در دیپلوی اصلی (نه پریویو) لازم است
      - name: Write CNAME (production)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          mkdir -p docs/dist
          echo "parsanaenergy.ir" > docs/dist/CNAME

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/dist

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Print Production URL
        run: echo "Production URL: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY

  preview:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy PR Preview
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          preview: true
      - name: Print Preview URL
        run: echo "Preview URL: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
